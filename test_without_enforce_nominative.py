#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –±–µ–∑ ENFORCE_NOMINATIVE —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–≤–æ–π–Ω–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏.
"""

import os
import sys
from pathlib import Path

# Set production environment variables BUT disable ENFORCE_NOMINATIVE
os.environ.update({
    'PRESERVE_FEMININE_SURNAMES': 'true',
    'ENABLE_ENHANCED_GENDER_RULES': 'true',
    'PRESERVE_FEMININE_SUFFIX_UK': 'true',
    'ENABLE_FSM_TUNED_ROLES': 'true',
    'MORPHOLOGY_CUSTOM_RULES_FIRST': 'true',
    'ENABLE_ADVANCED_FEATURES': 'true',
    'NORMALIZATION_ENABLE_ADVANCED_FEATURES': 'true',
    'NORMALIZATION_ENABLE_MORPHOLOGY': 'true',
    'ENFORCE_NOMINATIVE': 'false',  # ‚ùå –û–¢–ö–õ–Æ–ß–ê–ï–ú –î–í–û–ô–ù–£–Æ –ú–û–†–§–û–õ–û–ì–ò–Æ!
    'DEBUG_TRACING': 'true'
})

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_without_double_morphology():
    """–¢–µ—Å—Ç –±–µ–∑ –¥–≤–æ–π–Ω–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏."""
    print("üîç –¢–ï–°–¢ –ë–ï–ó ENFORCE_NOMINATIVE (–±–µ–∑ –¥–≤–æ–π–Ω–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏)")
    print("="*70)

    try:
        from ai_service.layers.normalization.normalization_service import NormalizationService

        service = NormalizationService()

        # –ö—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏–∑ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        test_cases = [
            {
                "text": "–ü–æ—Ä–æ—à–µ–Ω–∫–∞ –ü–µ—Ç–µ–Ω—å–∫–∞",
                "expected": "–ü–æ—Ä–æ—à–µ–Ω–∫–æ –ü–µ—Ç—Ä–æ"
            },
            {
                "text": "–ü–∞–≤–ª–æ–≤–æ—ó –î–∞—Ä º—ó –Æ—Ä—ñ—ó–≤–Ω–∏",
                "expected": "–ü–∞–≤–ª–æ–≤–∞ –î–∞—Ä º—è –Æ—Ä—ñ—ó–≤–Ω–∞"
            }
        ]

        for case in test_cases:
            text = case["text"]
            expected = case["expected"]

            print(f"\nüìù –¢–µ—Å—Ç: '{text}'")
            print(f"   –û–∂–∏–¥–∞–µ–º: '{expected}'")

            try:
                result = service.normalize_sync(
                    text=text,
                    language="uk",
                    remove_stop_words=True,
                    preserve_names=True,
                    enable_advanced_features=True
                )

                print(f"   ‚úÖ –ü–æ–ª—É—á–∏–ª–∏: '{result.normalized}'")

                status = "‚úÖ PASS" if result.normalized == expected else "‚ùå FAIL"
                print(f"   {status}")

                if result.normalized == expected:
                    print(f"   üéâ –ò–°–ü–†–ê–í–õ–ï–ù–û! –î–≤–æ–π–Ω–∞—è –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—è –±—ã–ª–∞ –ø—Ä–æ–±–ª–µ–º–æ–π!")

            except Exception as e:
                print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")

    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_without_double_morphology()