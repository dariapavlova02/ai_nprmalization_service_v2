{
  "exact_query_template": {
    "query": {
      "bool": {
        "must": [
          {
            "term": {
              "entity_type": "{{entity_type}}"
            }
          },
          {
            "bool": {
              "should": [
                {
                  "terms": {
                    "normalized_name": "{{search_terms}}",
                    "boost": 2.0
                  }
                },
                {
                  "terms": {
                    "aliases": "{{search_terms}}",
                    "boost": 1.5
                  }
                }
              ],
              "minimum_should_match": 1
            }
          }
        ]
      }
    },
    "size": 50,
    "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
  },
  
  "phrase_query_template": {
    "query": {
      "bool": {
        "must": [
          {
            "term": {
              "entity_type": "{{entity_type}}"
            }
          },
          {
            "match_phrase": {
              "name_text.shingle": {
                "query": "{{phrase_text}}",
                "slop": "{{slop}}",
                "boost": 1.8
              }
            }
          }
        ]
      }
    },
    "size": 50,
    "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
  },
  
  "ngram_query_template": {
    "query": {
      "bool": {
        "must": [
          {
            "term": {
              "entity_type": "{{entity_type}}"
            }
          },
          {
            "match": {
              "name_ngrams": {
                "query": "{{ngram_text}}",
                "operator": "AND",
                "minimum_should_match": "100%",
                "boost": 1.0
              }
            }
          }
        ]
      }
    },
    "size": 50,
    "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
  },
  
  "multi_search_template": [
    {
      "index": "watchlist_{{entity_type}}s_current",
      "search_type": "query_then_fetch"
    },
    {
      "query": {
        "bool": {
          "must": [
            {
              "term": {
                "entity_type": "{{entity_type}}"
              }
            },
            {
              "bool": {
                "should": [
                  {
                    "terms": {
                      "normalized_name": "{{search_terms}}",
                      "boost": 2.0
                    }
                  },
                  {
                    "terms": {
                      "aliases": "{{search_terms}}",
                      "boost": 1.5
                    }
                  }
                ],
                "minimum_should_match": 1
              }
            }
          ]
        }
      },
      "size": 50,
      "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
    },
    {
      "index": "watchlist_{{entity_type}}s_current",
      "search_type": "query_then_fetch"
    },
    {
      "query": {
        "bool": {
          "must": [
            {
              "term": {
                "entity_type": "{{entity_type}}"
              }
            },
            {
              "match_phrase": {
                "name_text.shingle": {
                  "query": "{{phrase_text}}",
                  "slop": 1,
                  "boost": 1.8
                }
              }
            }
          ]
        }
      },
      "size": 50,
      "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
    },
    {
      "index": "watchlist_{{entity_type}}s_current",
      "search_type": "query_then_fetch"
    },
    {
      "query": {
        "bool": {
          "must": [
            {
              "term": {
                "entity_type": "{{entity_type}}"
              }
            },
            {
              "match": {
                "name_ngrams": {
                  "query": "{{ngram_text}}",
                  "operator": "AND",
                  "minimum_should_match": "100%",
                  "boost": 1.0
                }
              }
            }
          ]
        }
      },
      "size": 50,
      "_source": ["entity_id", "entity_type", "normalized_name", "aliases", "country", "meta"]
    }
  ],
  
  "thresholds": {
    "exact_threshold": 1.0,
    "phrase_threshold": 0.8,
    "ngram_threshold": 0.6,
    "weak_threshold": 0.4
  },
  
  "sample_queries": {
    "person_exact": {
      "search_terms": ["иван", "петров"],
      "entity_type": "person",
      "phrase_text": "иван петров",
      "ngram_text": "иван петров"
    },
    "org_exact": {
      "search_terms": ["газпром"],
      "entity_type": "org",
      "phrase_text": "газпром",
      "ngram_text": "газпром"
    },
    "person_phrase": {
      "search_terms": ["иван", "петрович"],
      "entity_type": "person",
      "phrase_text": "иван петрович",
      "ngram_text": "иван петрович",
      "slop": 1
    },
    "org_ngram": {
      "search_terms": ["ооо", "газпром", "нефть"],
      "entity_type": "org",
      "phrase_text": "ооо газпром нефть",
      "ngram_text": "ооо газпром нефть"
    }
  },
  
  "sample_responses": {
    "exact_match_response": {
      "hits": {
        "total": {"value": 1},
        "max_score": 2.0,
        "hits": [
          {
            "_index": "watchlist_persons_v1_001",
            "_id": "person_001",
            "_score": 2.0,
            "_source": {
              "entity_id": "person_001",
              "entity_type": "person",
              "normalized_name": "иван петров",
              "aliases": ["и. петров", "ivan petrov"],
              "country": "RU",
              "meta": {
                "source": "sanctions",
                "list": "eu_sanctions"
              }
            }
          }
        ]
      }
    },
    "phrase_match_response": {
      "hits": {
        "total": {"value": 1},
        "max_score": 1.8,
        "hits": [
          {
            "_index": "watchlist_persons_v1_001",
            "_id": "person_002",
            "_score": 1.8,
            "_source": {
              "entity_id": "person_002",
              "entity_type": "person",
              "normalized_name": "иван петрович",
              "aliases": ["и. петрович"],
              "country": "RU",
              "meta": {
                "source": "sanctions",
                "list": "us_sanctions"
              }
            }
          }
        ]
      }
    },
    "ngram_match_response": {
      "hits": {
        "total": {"value": 2},
        "max_score": 1.0,
        "hits": [
          {
            "_index": "watchlist_persons_v1_001",
            "_id": "person_003",
            "_score": 1.0,
            "_source": {
              "entity_id": "person_003",
              "entity_type": "person",
              "normalized_name": "иван петровский",
              "aliases": [],
              "country": "RU",
              "meta": {
                "source": "sanctions",
                "list": "un_sanctions"
              }
            }
          },
          {
            "_index": "watchlist_persons_v1_001",
            "_id": "person_004",
            "_score": 0.9,
            "_source": {
              "entity_id": "person_004",
              "entity_type": "person",
              "normalized_name": "петр иванов",
              "aliases": [],
              "country": "RU",
              "meta": {
                "source": "sanctions",
                "list": "eu_sanctions"
              }
            }
          }
        ]
      }
    },
    "multi_search_response": {
      "responses": [
        {
          "hits": {
            "total": {"value": 1},
            "max_score": 2.0,
            "hits": [
              {
                "_index": "watchlist_persons_v1_001",
                "_id": "person_001",
                "_score": 2.0,
                "_source": {
                  "entity_id": "person_001",
                  "entity_type": "person",
                  "normalized_name": "иван петров",
                  "aliases": ["и. петров"],
                  "country": "RU"
                }
              }
            ]
          }
        },
        {
          "hits": {
            "total": {"value": 0},
            "max_score": null,
            "hits": []
          }
        },
        {
          "hits": {
            "total": {"value": 1},
            "max_score": 0.8,
            "hits": [
              {
                "_index": "watchlist_persons_v1_001",
                "_id": "person_002",
                "_score": 0.8,
                "_source": {
                  "entity_id": "person_002",
                  "entity_type": "person",
                  "normalized_name": "иван петрович",
                  "aliases": [],
                  "country": "RU"
                }
              }
            ]
          }
        }
      ]
    }
  },
  
  "ac_score_examples": [
    {
      "type": "exact",
      "score": 2.0,
      "matched_field": "normalized_name",
      "matched_text": "иван петров",
      "entity_id": "person_001",
      "entity_type": "person"
    },
    {
      "type": "phrase",
      "score": 1.8,
      "matched_field": "name_text.shingle",
      "matched_text": "иван петрович",
      "entity_id": "person_002",
      "entity_type": "person"
    },
    {
      "type": "ngram",
      "score": 1.0,
      "matched_field": "name_ngrams",
      "matched_text": "иван петровский",
      "entity_id": "person_003",
      "entity_type": "person"
    },
    {
      "type": "weak",
      "score": 0.7,
      "matched_field": "name_ngrams",
      "matched_text": "петр иванов",
      "entity_id": "person_004",
      "entity_type": "person"
    }
  ],
  
  "best_hit_examples": {
    "exact_priority": {
      "candidates": [
        {"type": "exact", "score": 1.5, "matched_text": "иван петров"},
        {"type": "phrase", "score": 2.0, "matched_text": "иван петрович"},
        {"type": "ngram", "score": 1.8, "matched_text": "иван петровский"}
      ],
      "best_hit": {"type": "exact", "score": 1.5, "matched_text": "иван петров"},
      "reason": "Exact match has highest priority regardless of score"
    },
    "score_priority": {
      "candidates": [
        {"type": "phrase", "score": 1.2, "matched_text": "иван петрович"},
        {"type": "ngram", "score": 1.8, "matched_text": "иван петровский"},
        {"type": "ngram", "score": 0.9, "matched_text": "петр иванов"}
      ],
      "best_hit": {"type": "phrase", "score": 1.2, "matched_text": "иван петрович"},
      "reason": "Phrase match has higher priority than ngram, then highest score wins"
    },
    "weak_signal": {
      "candidates": [
        {"type": "ngram", "score": 0.8, "matched_text": "иван петровский"},
        {"type": "ngram", "score": 0.6, "matched_text": "петр иванов"}
      ],
      "best_hit": {"type": "ngram", "score": 0.8, "matched_text": "иван петровский"},
      "weak_signal": true,
      "reason": "No exact/phrase matches, but ngram with score >= T_ng (0.6)"
    }
  }
}
