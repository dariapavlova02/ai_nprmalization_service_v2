#!/usr/bin/env python3
"""
Test name declension via API after fixing orchestrator to use factory.
"""

import requests
import json

def test_declension_api():
    """Test name declension through full API."""
    print("üß™ TESTING NAME DECLENSION VIA API")
    print("=" * 50)

    api_url = "http://95.217.84.234:8000/process"

    test_cases = [
        "–ü–∞–≤–ª–æ–≤–æ–π –î–∞—Ä—å–∏",    # Should become "–î–∞—Ä—å—è –ü–∞–≤–ª–æ–≤–∞"
        "–ò–≤–∞–Ω–æ–≤–∞ –ü–µ—Ç—Ä–∞",     # Should become "–ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤"
        "–î–∞—Ä—å—è –ü–∞–≤–ª–æ–≤–∞",     # Should stay the same
    ]

    for test_text in test_cases:
        print(f"\nüîç Testing: '{test_text}'")

        payload = {
            "text": test_text,
            "enable_search": False,  # Focus only on normalization
            "enable_decision": False
        }

        try:
            response = requests.post(api_url, json=payload, timeout=15)

            if response.status_code == 200:
                result = response.json()

                normalized = result.get('normalized_text', '')
                language = result.get('language', 'unknown')
                success = result.get('success', False)

                print(f"‚úÖ Success: {success}")
                print(f"üåç Language: {language}")
                print(f"üìù Normalized: '{normalized}'")

                # Check if declension worked
                if test_text == "–ü–∞–≤–ª–æ–≤–æ–π –î–∞—Ä—å–∏" and normalized == "–î–∞—Ä—å—è –ü–∞–≤–ª–æ–≤–∞":
                    print("üéâ DECLENSION FIXED!")
                elif test_text == normalized:
                    print("‚úÖ No change needed")
                else:
                    print(f"‚ö†Ô∏è  Change detected: '{test_text}' -> '{normalized}'")

            else:
                print(f"‚ùå HTTP Error {response.status_code}")
                print(f"Response: {response.text}")

        except Exception as e:
            print(f"‚ùå Request failed: {e}")

if __name__ == "__main__":
    test_declension_api()