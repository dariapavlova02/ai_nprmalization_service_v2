name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Канареечные тесты каждый день в 6:00 UTC
    - cron: "0 6 * * *"

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-dev
    
    - name: Install dev dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install
    
    - name: Run tests
      run: poetry run pytest tests/ -v --tb=short
    
    - name: Run tests with coverage
      run: poetry run pytest tests/ --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  canary_run:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    strategy:
      matrix:
        python-version: [3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-dev
    
    - name: Install dev dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install
    
    - name: Create artifacts directory
      run: mkdir -p artifacts
    
    - name: Run canary tests
      run: |
        poetry run pytest tests/canary/ -q -k "not slow" --strict-perf --junitxml=artifacts/canary-results.xml --tb=short
      continue-on-error: true
    
    - name: Generate canary report
      run: |
        cat > artifacts/canary_report.md << 'EOF'
        # Canary Test Report
        
        Generated: $(date)
        Branch: ${{ github.ref_name }}
        Commit: ${{ github.sha }}
        
        ## Test Results
        
        EOF
        
        # Добавляем результаты тестов в отчет
        if [ -f artifacts/canary-results.xml ]; then
          echo "### Test Summary" >> artifacts/canary_report.md
          echo "```xml" >> artifacts/canary_report.md
          cat artifacts/canary-results.xml >> artifacts/canary_report.md
          echo "```" >> artifacts/canary_report.md
        else
          echo "### No test results found" >> artifacts/canary_report.md
        fi
        
        echo "" >> artifacts/canary_report.md
        echo "## Performance Thresholds" >> artifacts/canary_report.md
        echo "- p95 < 10ms (strict performance mode)" >> artifacts/canary_report.md
        echo "- Average response time < 5ms" >> artifacts/canary_report.md
    
    - name: Upload canary artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: canary-report-${{ github.run_number }}
        path: artifacts/
        retention-days: 30
