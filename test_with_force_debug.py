#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –≤–∫–ª—é—á–µ–Ω–∏–µ–º DEBUG –ª–æ–≥–æ–≤.
"""

import os
import sys
import logging
from pathlib import Path

# Set production environment variables
os.environ.update({
    'PRESERVE_FEMININE_SURNAMES': 'true',
    'ENABLE_ENHANCED_GENDER_RULES': 'true',
    'PRESERVE_FEMININE_SUFFIX_UK': 'true',
    'ENABLE_FSM_TUNED_ROLES': 'true',
    'MORPHOLOGY_CUSTOM_RULES_FIRST': 'true',
    'ENABLE_ADVANCED_FEATURES': 'true',
    'NORMALIZATION_ENABLE_ADVANCED_FEATURES': 'true',
    'NORMALIZATION_ENABLE_MORPHOLOGY': 'true',
    'DEBUG_TRACING': 'true',
    'LOG_LEVEL': 'DEBUG'
})

# Force DEBUG logging
logging.basicConfig(level=logging.DEBUG, format='%(levelname)s:%(name)s:%(message)s')

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_with_debug():
    """–¢–µ—Å—Ç —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º debug."""
    print("üîç –¢–ï–°–¢ –° –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ú DEBUG –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú")
    print("="*60)

    try:
        from ai_service.layers.normalization.normalization_service import NormalizationService

        service = NormalizationService()

        # Enable debug logging for the specific modules
        normalization_logger = logging.getLogger("ai_service.layers.normalization")
        normalization_logger.setLevel(logging.DEBUG)

        factory_logger = logging.getLogger("ai_service.layers.normalization.processors.normalization_factory")
        factory_logger.setLevel(logging.DEBUG)

        text = "–ü–æ—Ä–æ—à–µ–Ω–∫–∞ –ü–µ—Ç–µ–Ω—å–∫–∞"
        print(f"üìù –¢–µ—Å—Ç: '{text}'")

        result = service.normalize_sync(
            text=text,
            language="uk",
            remove_stop_words=True,
            preserve_names=True,
            enable_advanced_features=True
        )

        print(f"\n‚úÖ –ü–æ–ª—É—á–∏–ª–∏: '{result.normalized}'")
        print(f"‚úÖ –¢–æ–∫–µ–Ω—ã: {result.tokens}")

        expected = "–ü–æ—Ä–æ—à–µ–Ω–∫–æ –ü–µ—Ç—Ä–æ"
        if result.normalized == expected:
            print(f"‚úÖ –£–°–ü–ï–•!")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê! –û–∂–∏–¥–∞–ª–∏: '{expected}'")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_with_debug()