#!/usr/bin/env python3
"""Test homoglyph normalization fix"""

from src.ai_service.layers.normalization.homoglyph_detector import HomoglyphDetector

def test_homoglyph_normalization():
    detector = HomoglyphDetector()

    test_cases = [
        ("Liud–º—Éla Ulianova", "Liudmyla Ulianova"),  # Cyrillic –º,—É -> Latin m,y
        ("–°–µ—Ä–≥—ñ–π –û–ª—ñ–π–Ω–∏–∫", "Cep–≥i–π O–ªi–π–Ω–∏–∫"),  # Cyrillic –°,–û -> Latin C,O
        ("ABCEHKMOPTXY", "ABCEHKMOPTXY"),  # All Latin, no change
        ("–ê–í–°–ï–ù–ö–ú–û–†–¢–•–£", "ABCEHKMOPTXY"),  # All Cyrillic -> Latin
        ("Mixed–¢–µ–∫—Å—ÇText", "MixedTekctText"),  # Mixed -> all Latin
    ]

    print("üß™ Testing Homoglyph Normalization\n" + "="*50)

    for original, expected_contains in test_cases:
        normalized, transformations = detector.normalize_homoglyphs(original)
        detection = detector.detect_homoglyphs(original)

        print(f"\nOriginal: '{original}'")
        print(f"Normalized: '{normalized}'")
        print(f"Has homoglyphs: {detection['has_homoglyphs']}")
        print(f"Transformations: {len(transformations)}")

        if transformations:
            for t in transformations[:3]:  # Show first 3 transformations
                print(f"  - {t}")

        # Check if normalized correctly
        success = True
        for char in ['–º', '—É', '–°', '–û', '–¢', '–ê', '–í', '–ï', '–ù', '–ö', '–ú', '–†', '–•', '–£']:
            if char in normalized:
                print(f"  ‚ùå Still contains Cyrillic '{char}'")
                success = False
                break

        if success and detection['has_homoglyphs']:
            print(f"  ‚úÖ Properly normalized mixed script to Latin")

if __name__ == "__main__":
    test_homoglyph_normalization()