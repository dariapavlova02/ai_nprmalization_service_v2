{
  "AttributeError: 'NormalizationService' object has no attribute 'language_configs' || no-frames": [
    "TestNormalizationService.test_tokenize_text_fallback_to_nltk",
    "TestNormalizationService.test_tokenize_text_basic_fallback",
    "TestNormalizationService.test_remove_stop_words_english",
    "TestNormalizationService.test_remove_stop_words_russian",
    "TestNormalizationService.test_apply_stemming_english",
    "TestNormalizationService.test_apply_stemming_russian",
    "TestNormalizationService.test_apply_stemming_ukrainian",
    "TestNormalizationService.test_apply_stemming_fallback",
    "TestNormalizationService.test_apply_lemmatization_english",
    "TestNormalizationService.test_apply_lemmatization_russian",
    "TestNormalizationService.test_apply_lemmatization_fallback"
  ],
  "AssertionError: assert 'Hello world' in 'Hello World' || no-frames": [
    "TestNormalizationService.test_normalize_english_text",
    "TestNormalizationService.test_normalize_with_fallback",
    "TestNormalizationService.test_normalize_sync_method",
    "TestNormalizationService.test_normalize_async_method",
    "TestNormalizationService.test_normalize_with_flags",
    "TestNormalizationService.test_normalize_english_text"
  ],
  "assert False is True || no-frames": [
    "TestElasticsearchWatchlistAdapterIntegration.test_full_workflow",
    "TestSearchIntegration.test_should_enable_search_with_persons",
    "TestSearchIntegration.test_should_enable_search_with_organizations",
    "TestInputValidator.test_suspicion_analysis_high_homoglyph_ratio"
  ],
  "assert None is not None || no-frames": [
    "TestSearchIntegration.test_extract_and_search_with_service",
    "TestSearchIntegrationThresholds.test_threshold_normalization",
    "TestSearchIntegrationThresholds.test_search_mode_handling"
  ],
  "pydantic_core._pydantic_core.ValidationError: 1 validation error for NormalizationResult || no-frames": [
    "TestNormalizationService.test_normalize_with_auto_language_detection",
    "TestNormalizationResult.test_normalization_result_creation",
    "TestNormalizationResult.test_normalization_result_error_case"
  ],
  "assert 0 > 0 || no-frames": [
    "TestNormalizationPipeline.test_compound_name_pipeline",
    "TestPatternService.test_case_sensitivity_handling"
  ],
  "AssertionError: assert True is False || no-frames": [
    "TestOrchestratorService.test_process_error_handling",
    "TestOrchestratorService.test_process_normalization_service_exception"
  ],
  "AssertionError: assert 'Привет' in '' || no-frames": [
    "TestNormalizationService.test_normalize_russian_text",
    "TestNormalizationService.test_normalize_russian_text"
  ],
  "AttributeError: <module 'src.ai_service.layers.normalization.normalization_service' from '/Users/dariapavlova/Desktop/ai-service/src/ai_service/layers/normalization/normalization_service.py'> does not have the attribute 'SPACY_AVAILABLE' || no-frames": [
    "TestNormalizationServiceConfiguration.test_initialization_without_spacy",
    "TestNormalizationServiceConfiguration.test_initialization_minimal_dependencies"
  ],
  "AssertionError: Should generate many variants for complex text, got 12 || no-frames": [
    "TestNightmareScenario.test_performance_nightmare"
  ],
  "AssertionError: assert ('   \\t\\n\\r   ' == '' || no-frames": [
    "TestNightmareScenario.test_edge_cases_nightmare"
  ],
  "AssertionError: Should have cache hits || no-frames": [
    "TestNightmareScenario.test_cache_effectiveness_nightmare"
  ],
  "AssertionError: Ожидалось: {'володимир', 'зеленського'}, получено: {'володимир', 'в.', 'зеленського'} || no-frames": [
    "test_ukrainian_full_normalization[\\u041f\\u0435\\u0440\\u0435\\u043a\\u0430\\u0437 \\u0432\\u0456\\u0434 \\u0412\\u043e\\u0432\\u0447\\u0438\\u043a\\u0430 \\u0417\\u0435\\u043b\\u0435\\u043d\\u0441\\u044c\\u043a\\u043e\\u0433\\u043e \\u0412. \\u041e.-\\u0412\\u043e\\u043b\\u043e\\u0434\\u0438\\u043c\\u0438\\u0440 \\u0417\\u0435\\u043b\\u0435\\u043d\\u0441\\u044c\\u043a\\u043e\\u0433\\u043e]"
  ],
  "AssertionError: Ожидалось: {'скрипка', 'олег'}, получено: {'олегу', 'скрипці'} || no-frames": [
    "test_ukrainian_full_normalization[\\u041f\\u0435\\u0440\\u0435\\u043a\\u0430\\u0437 \\u041e\\u041b\\u0415\\u0413\\u0423 \\u0421\\u041a\\u0420\\u0418\\u041f\\u0426\\u0406-\\u041e\\u043b\\u0435\\u0433 \\u0421\\u043a\\u0440\\u0438\\u043f\\u043a\\u0430]"
  ],
  "AssertionError: Ожидалось: {'пугачева', 'алла', 'борисовн'}, получено: {'пугачева', 'борисовна', 'алла'} || no-frames": [
    "test_russian_full_normalization[\\u0414\\u043b\\u044f \\u0410\\u043b\\u043b\\u044b \\u0411\\u043e\\u0440\\u0438\\u0441\\u043e\\u0432\\u043d\\u044b \\u041f\\u0443\\u0433\\u0430\\u0447\\u0435\\u0432\\u043e\\u0439-\\u0410\\u043b\\u043b\\u0430 \\u0411\\u043e\\u0440\\u0438\\u0441\\u043e\\u0432\\u043d \\u041f\\u0443\\u0433\\u0430\\u0447\\u0435\\u0432\\u0430]"
  ],
  "AssertionError: assert 1 < 0 || /Users/dariapavlova/Desktop/ai-service/src/ai_service/core/unified_orchestrator.py:381 in process": [
    "TestUnicodeFirstLanguageDetectionOrder.test_orchestrator_call_order_verification"
  ],
  "AssertionError: assert 'morph' not in 'morph' || no-frames": [
    "TestMixedScriptNames.test_ascii_names_no_morphology"
  ],
  "AssertionError: Should generate multiple variants with morphology enabled || no-frames": [
    "TestNormalizationPipeline.test_morphology_integration"
  ],
  "AssertionError: Org 0 core mismatch: expected ПриватБанк, got 'ПРИВАТБАНК' || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[ukrainian_company_with_legal_form]"
  ],
  "AssertionError: Expected normalized 'П. І. Коваленко', got 'П. І. Коваленко Агросвіт' || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[mixed_person_and_company]"
  ],
  "AssertionError: Expected normalized 'П. С. Іванов', got 'Иванов П. С.' || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[person_with_inn]"
  ],
  "AssertionError: Expected normalized 'John Smith Олена Петренко', got 'John Smith' || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[mixed_script_names]"
  ],
  "AssertionError: Language confidence 0.75 below minimum 0.8 || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[quoted_company_with_person]"
  ],
  "AssertionError: Expected language uk, got ru || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[overfit_canary]"
  ],
  "AssertionError: Expected normalized 'Іваненко Іван Іванович', got 'Агросвіт Іваненко Іван Іванович' || no-frames": [
    "TestPipelineEnd2End.test_pipeline_integration[full_pipeline_stress_test]"
  ],
  "AssertionError: Flags should produce different results but all were identical: ['Іван Петрович Сидоренко', 'Іван Петрович Сидоренко', 'Іван Петрович Сидоренко', 'Іван Петрович Сидоренко'] || no-frames": [
    "TestPipelineEnd2End.test_normalization_flags_behavior"
  ],
  "AssertionError: Short text 'Іван Петров' processing too slow: 0.017s (should be ≤ 0.01s) || no-frames": [
    "TestPipelineEnd2End.test_performance_requirements"
  ],
  "AssertionError: Ожидалось: {'чайковский', 'петр'}, получено: {'петр', 'чайковском'} || no-frames": [
    "test_role_based_slavic_normalization[\\u041f\\u0435\\u0442\\u0440\\u0443 \\u0427\\u0430\\u0439\\u043a\\u043e\\u0432\\u0441\\u043a\\u043e\\u043c\\u0443-\\u041f\\u0435\\u0442\\u0440 \\u0427\\u0430\\u0439\\u043a\\u043e\\u0432\\u0441\\u043a\\u0438\\u0439-ru]"
  ],
  "AssertionError: Ожидалось: {'александрович', 'александр'}, получено: {'александрович', 'александра'} || no-frames": [
    "test_role_based_slavic_normalization[\\u043e\\u0442 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u0430 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u043e\\u0432\\u0438\\u0447\\u0430-\\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u043e\\u0432\\u0438\\u0447-ru]"
  ],
  "AssertionError: Ожидалось: {'с.', 'іванов-петренко', 'в.'}, получено: {'с.', 'іванова-петренко', 'в.'} || no-frames": [
    "test_role_based_slavic_normalization[\\u0414\\u043b\\u044f \\u0406\\u0432\\u0430\\u043d\\u043e\\u0432\\u0430-\\u041f\\u0435\\u0442\\u0440\\u0435\\u043d\\u043a\\u0430 \\u0421.\\u0412.-\\u0406\\u0432\\u0430\\u043d\\u043e\\u0432-\\u041f\\u0435\\u0442\\u0440\\u0435\\u043d\\u043a\\u043e \\u0421. \\u0412.-uk]"
  ],
  "AssertionError: Ожидалось: {'с.', 'а.', 'пушкин'}, получено: {'а.', 'пушкин'} || no-frames": [
    "test_role_based_slavic_normalization[\\u043f\\u0443\\u0448\\u043a\\u0438\\u043d \\u0430 \\u0441-\\u041f\\u0443\\u0448\\u043a\\u0438\\u043d \\u0410. \\u0421.-ru]"
  ],
  "AssertionError: assert 'Владимир Петров' in 'Владимир Анна Петрова' || no-frames": [
    "TestRussianUkrainianSentences.test_multiple_persons_same_surname"
  ],
  "assert 2 == 1 || no-frames": [
    "TestSignalsServiceIntegration.test_complex_payment_scenario"
  ],
  "assert 1.0 == 1.495 || no-frames": [
    "TestDecisionEngineWithSearch.test_calculate_weighted_score_with_multiple_matches"
  ],
  "assert 0.745 == 0.645 || no-frames": [
    "TestDecisionEngineWithSearch.test_calculate_weighted_score_threshold_filtering"
  ],
  "assert 1.0 == 1.065 || no-frames": [
    "TestDecisionEngineWithSearch.test_search_bonuses_and_penalties"
  ],
  "AssertionError: assert [('person_001...on_001', 0.8)] == [('person_001', 0.8)] || no-frames": [
    "TestElasticsearchWatchlistAdapter.test_search_ac_success"
  ],
  "KeyError: 'snapshot_restored' || no-frames": [
    "TestElasticsearchWatchlistAdapter.test_reload_snapshot_success"
  ],
  "AssertionError: Expected 'aclose' to have been called once. Called 0 times. || no-frames": [
    "TestElasticsearchWatchlistAdapter.test_close"
  ],
  "AttributeError: 'VectorIndexConfig' object has no attribute 'use_semantic_embeddings' || no-frames": [
    "TestFactoryFunctions.test_create_elasticsearch_enhanced_adapter"
  ],
  "AssertionError: Unexpected methods found: {'log_performance', 'health_check', 'log_entry', 'reset_stats', 'log_exit', 'get_stats', 'generate_embeddings', 'log_error', 'is_initialized'} || no-frames": [
    "TestEmbeddingContract.test_pure_vector_generation_contract"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_russian_feminine_surname_preservation' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_russian_feminine_surname_preservation"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_ukrainian_case_preservation' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_ukrainian_case_preservation"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_token_trace_completeness' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_token_trace_completeness"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_org_acronym_filtering' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_org_acronym_filtering"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_case_normalization_consistency' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_case_normalization_consistency"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_yo_normalization_consistency' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_yo_normalization_consistency"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_deterministic_behavior' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_deterministic_behavior"
  ],
  "hypothesis.errors.FailedHealthCheck: 'tests/unit/test_normalization_property_based.py::TestNormalizationServiceProperties::test_language_specific_processing' uses a function-scoped fixture 'normalization_service'. || no-frames": [
    "TestNormalizationServiceProperties.test_language_specific_processing"
  ],
  "assert False is True || /Users/dariapavlova/Desktop/ai-service/src/ai_service/core/unified_orchestrator.py:332 in process": [
    "TestUnifiedOrchestrator.test_process_basic_functionality"
  ],
  "AssertionError: assert 'Test text' == 'test text' || no-frames": [
    "TestOrchestratorService.test_process_basic_functionality"
  ],
  "AssertionError: assert UnifiedProces...ue, errors=[]) == UnifiedProces...ue, errors=[]) || no-frames": [
    "TestOrchestratorService.test_process_with_cache_hit"
  ],
  "AssertionError: Expected 'set' to have been called once. Called 0 times. || no-frames": [
    "TestOrchestratorService.test_process_with_cache_miss"
  ],
  "AssertionError: Expected 'get_embeddings' to have been called once. Called 0 times. || no-frames": [
    "TestOrchestratorService.test_process_with_embeddings"
  ],
  "assert 0 == 2 || no-frames": [
    "TestOrchestratorService.test_search_similar_names_with_embeddings"
  ],
  "AssertionError: assert 'embeddings' == 'variants' || no-frames": [
    "TestOrchestratorService.test_search_similar_names_fallback"
  ],
  "AssertionError: assert 'unicode' in {'character_count': 25, 'complexity_score': 0.3333333333333333, 'recommendations': ['Text complexity is moderate', 'Good balance', 'Consider reviewing structure'], 'word_count': 4} || no-frames": [
    "TestOrchestratorService.test_analyze_text_complexity"
  ],
  "AssertionError: assert 'services' in {'cache': 0, 'cache_hits': 0, 'cache_misses': 0, 'errors': 0, ...} || no-frames": [
    "TestOrchestratorService.test_get_processing_stats"
  ],
  "assert 0 >= 1 || no-frames": [
    "TestOrchestratorService.test_update_stats"
  ],
  "AssertionError: assert 'Force reprocess test' == 'new result' || no-frames": [
    "TestOrchestratorService.test_force_reprocess_ignores_cache"
  ],
  "AssertionError: assert set() == {'ivan petrov...рия сидорова'} || no-frames": [
    "TestExtractSearchCandidates.test_extract_from_persons"
  ],
  "AssertionError: assert set() == {'apple', 'ap... 'приватбанк'} || no-frames": [
    "TestExtractSearchCandidates.test_extract_from_organizations"
  ],
  "AssertionError: assert set() == {'и. петров',... 'приватбанк'} || no-frames": [
    "TestExtractSearchCandidates.test_extract_mixed_entities"
  ],
  "AssertionError: assert set() == {'и. петров', 'иван петров'} || no-frames": [
    "TestExtractSearchCandidates.test_extract_filters_empty_strings"
  ],
  "AssertionError: 'оплата за консультацію Петров Іван' == 'оплата за консультацію Петров Іван' || no-frames": [
    "TestSmartFilterService.test_service_words_cleaning"
  ],
  "AssertionError: 'исключен' not found in 'Text excluded from processing (service information only)' || no-frames": [
    "TestSmartFilterService.test_should_process_text_excluded"
  ],
  "assert \"'€u\" == \"'\\x80u\" || no-frames": [
    "TestUnicodeServiceProperties.test_normalization_stability"
  ],
  "AssertionError: Expected 'П' in tokens: ['Коваленко'] || no-frames": [
    "TestFlagsBehavior.test_initial_cleanup_still_works_with_flags"
  ],
  "AssertionError: Expected 'Петро Іванов', but got 'Петро Іванова' || no-frames": [
    "test_ukrainian_full_normalization[\\u0414\\u043b\\u044f \\u041f\\u0435\\u0442\\u0440\\u0443\\u0441\\u044f \\u0406\\u0432\\u0430\\u043d\\u043e\\u0432\\u0430, \\u0437\\u0430 \\u0440\\u0435\\u043c\\u043e\\u043d\\u0442-\\u041f\\u0435\\u0442\\u0440\\u043e \\u0406\\u0432\\u0430\\u043d\\u043e\\u0432]"
  ],
  "AssertionError: Expected 'Володимир Зеленський В. О.', but got 'Володимир Зеленського' || no-frames": [
    "test_ukrainian_full_normalization[\\u041f\\u0435\\u0440\\u0435\\u043a\\u0430\\u0437 \\u0432\\u0456\\u0434 \\u0412\\u043e\\u0432\\u0447\\u0438\\u043a\\u0430 \\u0417\\u0435\\u043b\\u0435\\u043d\\u0441\\u044c\\u043a\\u043e\\u0433\\u043e \\u0412. \\u041e.-\\u0412\\u043e\\u043b\\u043e\\u0434\\u0438\\u043c\\u0438\\u0440 \\u0417\\u0435\\u043b\\u0435\\u043d\\u0441\\u044c\\u043a\\u0438\\u0439 \\u0412. \\u041e.]"
  ],
  "AssertionError: Expected 'Олександр Положинський', but got 'Олександр Положинського' || no-frames": [
    "test_ukrainian_full_normalization[\\u0412\\u0456\\u0434 \\u0421\\u0430\\u0448\\u043a\\u0430 \\u041f\\u043e\\u043b\\u043e\\u0436\\u0438\\u043d\\u0441\\u044c\\u043a\\u043e\\u0433\\u043e \\u0437\\u0430 \\u043a\\u0432\\u0438\\u0442\\u043a\\u0438-\\u041e\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440 \\u041f\\u043e\\u043b\\u043e\\u0436\\u0438\\u043d\\u0441\\u044c\\u043a\\u0438\\u0439]"
  ],
  "AssertionError: Expected 'Євген Галич', but got 'Євген Галича' || no-frames": [
    "test_ukrainian_full_normalization[\\u0414\\u043b\\u044f \\u0416\\u0435\\u043d\\u0456 \\u0413\\u0430\\u043b\\u0438\\u0447\\u0430 \\u0437 \\u0433\\u0440\\u0443\\u043f\\u0438 O.Torvald-\\u0404\\u0432\\u0433\\u0435\\u043d \\u0413\\u0430\\u043b\\u0438\\u0447]"
  ],
  "AssertionError: Expected 'Валерій Залужний', but got 'Валерій Залужним' || no-frames": [
    "test_ukrainian_full_normalization[\\u0420\\u043e\\u0437\\u043c\\u043e\\u0432\\u043b\\u044f\\u0432 \\u0437 \\u0412\\u0430\\u043b\\u0435\\u0440\\u0456\\u0454\\u043c \\u0417\\u0430\\u043b\\u0443\\u0436\\u043d\\u0438\\u043c-\\u0412\\u0430\\u043b\\u0435\\u0440\\u0456\\u0439 \\u0417\\u0430\\u043b\\u0443\\u0436\\u043d\\u0438\\u0439]"
  ],
  "AssertionError: Expected 'Олег Скрипка', but got '' || no-frames": [
    "test_ukrainian_full_normalization[\\u041f\\u0435\\u0440\\u0435\\u043a\\u0430\\u0437 \\u041e\\u041b\\u0415\\u0413\\u0423 \\u0421\\u041a\\u0420\\u0418\\u041f\\u0426\\u0406-\\u041e\\u043b\\u0435\\u0433 \\u0421\\u043a\\u0440\\u0438\\u043f\\u043a\\u0430]"
  ],
  "AssertionError: Expected 'Іванов-Петренко С.В.', but got 'Іванова-Петренко С. В.' || no-frames": [
    "test_ukrainian_full_normalization[\\u0414\\u043b\\u044f \\u0406\\u0432\\u0430\\u043d\\u043e\\u0432\\u0430-\\u041f\\u0435\\u0442\\u0440\\u0435\\u043d\\u043a\\u0430 \\u0421.\\u0412.-\\u0406\\u0432\\u0430\\u043d\\u043e\\u0432-\\u041f\\u0435\\u0442\\u0440\\u0435\\u043d\\u043a\\u043e \\u0421.\\u0412.]"
  ],
  "AssertionError: Expected 'Александр Пушкин Александрович', but got 'Александр Пушкинин Александрович' || no-frames": [
    "test_russian_full_normalization[\\u041f\\u0435\\u0440\\u0435\\u0432\\u043e\\u0434 \\u043e\\u0442 \\u0421\\u0430\\u0448\\u0438 \\u041f\\u0443\\u0448\\u043a\\u0438\\u043d\\u0430 \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u043e\\u0432\\u0438\\u0447\\u0430-\\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440 \\u041f\\u0443\\u0448\\u043a\\u0438\\u043d \\u0410\\u043b\\u0435\\u043a\\u0441\\u0430\\u043d\\u0434\\u0440\\u043e\\u0432\\u0438\\u0447]"
  ],
  "AssertionError: Expected 'Владимир Высоцкий', but got 'Владимир Высоцкого' || no-frames": [
    "test_russian_full_normalization[\\u041e\\u043f\\u043b\\u0430\\u0442\\u0430 \\u0434\\u043b\\u044f \\u0412\\u043e\\u043b\\u043e\\u0434\\u0438 \\u0412\\u044b\\u0441\\u043e\\u0446\\u043a\\u043e\\u0433\\u043e-\\u0412\\u043b\\u0430\\u0434\\u0438\\u043c\\u0438\\u0440 \\u0412\\u044b\\u0441\\u043e\\u0446\\u043a\\u0438\\u0439]"
  ],
  "AssertionError: Expected 'Петр Чайковский', but got 'Петр Чайковском' || no-frames": [
    "test_russian_full_normalization[\\u0411\\u043b\\u0430\\u0433\\u043e\\u0434\\u0430\\u0440\\u043d\\u043e\\u0441\\u0442\\u044c \\u041f\\u0435\\u0442\\u0440\\u0443 \\u0427\\u0430\\u0439\\u043a\\u043e\\u0432\\u0441\\u043a\\u043e\\u043c\\u0443-\\u041f\\u0435\\u0442\\u0440 \\u0427\\u0430\\u0439\\u043a\\u043e\\u0432\\u0441\\u043a\\u0438\\u0439]"
  ],
  "AssertionError: Expected 'Есенин С. А.', but got 'Есенина С. А.' || no-frames": [
    "test_russian_full_normalization[\\u041e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u043e \\u0434\\u043b\\u044f \\u0415\\u0441\\u0435\\u043d\\u0438\\u043d\\u0430 \\u0421. \\u0410.-\\u0415\\u0441\\u0435\\u043d\\u0438\\u043d \\u0421. \\u0410.]"
  ],
  "AssertionError: Expected 'Лермонтов М.Ю.', but got 'Лермонтова М. Ю.' || no-frames": [
    "test_russian_full_normalization[\\u0417\\u0430\\u0447\\u0438\\u0441\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0442 \\u041b\\u0435\\u0440\\u043c\\u043e\\u043d\\u0442\\u043e\\u0432\\u0430 \\u041c.\\u042e.-\\u041b\\u0435\\u0440\\u043c\\u043e\\u043d\\u0442\\u043e\\u0432 \\u041c.\\u042e.]"
  ],
  "assert \"O'Connor\" in \"O'connor\" || no-frames": [
    "TestNormalizationService.test_normalize_with_special_characters"
  ],
  "AssertionError: assert 'en' in {'ru': {'алекс': 'Александр', 'алекса': 'Александра', 'алина': 'Алина', 'алис': 'Алиса', ...}, 'uk': {'алекс': 'Олександр', 'алекса': 'Олександра', 'алина': 'Алина', 'алка': 'Алла', ...}} || no-frames": [
    "TestNormalizationServiceConfiguration.test_diminutive_maps_initialization"
  ],
  "AttributeError: <module 'src.ai_service.layers.normalization.normalization_service' from '/Users/dariapavlova/Desktop/ai-service/src/ai_service/layers/normalization/normalization_service.py'> does not have the attribute '_nltk_stopwords' || no-frames": [
    "TestNormalizationService.test_remove_stop_words_fallback"
  ],
  "AttributeError: <module 'src.ai_service.layers.normalization.normalization_service' from '/Users/dariapavlova/Desktop/ai-service/src/ai_service/layers/normalization/normalization_service.py'> does not have the attribute 'NLTK_AVAILABLE' || no-frames": [
    "TestNormalizationServiceConfiguration.test_initialization_without_nltk"
  ],
  "AttributeError: <module 'src.ai_service.layers.normalization.normalization_service' from '/Users/dariapavlova/Desktop/ai-service/src/ai_service/layers/normalization/normalization_service.py'> does not have the attribute 'nlp_en' || no-frames": [
    "TestNormalizationServiceConfiguration.test_cache_functionality"
  ],
  "AttributeError: 'NormalizationResult' object has no attribute 'error'. Did you mean: 'errors'? || no-frames": [
    "TestNormalizationResult.test_normalization_result_error_case"
  ],
  "AssertionError: Expected name 'п.і.' not found in normalized output: П. І. Коваленко Петросян || no-frames": [
    "TestCanaryOverfit.test_context_words_never_become_names"
  ],
  "AssertionError: Context word 'і' should not appear in normalized output: Іван Петро Коваленко || no-frames": [
    "TestCanaryOverfit.test_ukrainian_context_words"
  ],
  "AssertionError: Context word 'и' should not appear in normalized output: Иван Петр Коваленко || no-frames": [
    "TestCanaryOverfit.test_russian_context_words"
  ],
  "AssertionError: Context word 'and' should not appear in normalized output: П. І. Коваленко and Петросян work together || no-frames": [
    "TestCanaryOverfit.test_mixed_language_context_words"
  ],
  "AssertionError: assert 'Pаvlоv' == 'Pavlov' || no-frames": [
    "TestInputValidator.test_homoglyph_replacement"
  ],
  " || no-frames": [
    "TestE2ESanctionsScreening.test_russian_person_with_documents"
  ]
}