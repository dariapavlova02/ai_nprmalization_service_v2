#!/bin/bash
# URGENT: Deploy all critical fixes to production

echo "üö® URGENT PRODUCTION DEPLOYMENT - All Critical Fixes"
echo "===================================================="

PROD_HOST="95.217.84.234"
PROD_USER="root"

echo ""
echo "üìã COMPLETE DEPLOYMENT INSTRUCTIONS:"
echo ""
echo "üîó Connect to production server:"
echo "   ssh root@95.217.84.234"
echo ""
echo "üìç Navigate to project directory:"
echo "   cd /root/ai-service"
echo ""
echo "üîÑ Pull latest code (contains ALL fixes):"
echo "   git pull origin main"
echo ""
echo "üìÅ Key files that should be updated:"
echo "   - src/ai_service/core/decision_engine.py (search=inp.search fix)"
echo "   - src/ai_service/core/search_integration.py (ac_results conversion)"
echo "   - src/ai_service/layers/search/elasticsearch_adapters.py (case sensitivity)"
echo "   - src/ai_service/layers/smart_filter/smart_filter_service.py (timeout fix)"
echo "   - docker-compose.yml (elasticsearch dependency)"
echo ""
echo "üê≥ Rebuild and restart services:"
echo "   docker-compose down"
echo "   docker-compose build --no-cache ai-service"
echo "   docker-compose up -d"
echo ""
echo "‚è±Ô∏è Wait for services to start (30-60 seconds)"
echo "   docker logs ai-service -f"
echo ""
echo "üß™ Test the complete fix:"
echo "   curl -X POST http://95.217.84.234:8002/process \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{\"text\": \"–ü–µ—Ç—Ä–æ –ü–æ—Ä–æ—à–µ–Ω–∫–æ\"}' | jq '.'"
echo ""
echo "‚úÖ Expected result AFTER ALL fixes:"
echo "   {"
echo "     \"decision\": {"
echo "       \"risk_level\": \"high\",        # ‚Üê NOT 'skip'!"
echo "       \"risk_score\": 0.5+,"
echo "       \"score_breakdown\": {"
echo "         \"search_contribution\": 0.25,  # ‚Üê SHOULD APPEAR!"
echo "         \"smartfilter_contribution\": 0.075,"
echo "         \"person_contribution\": 0.18"
echo "       }"
echo "     },"
echo "     \"search_results\": {"
echo "       \"total_hits\": 1+               # ‚Üê Should find AC matches"
echo "     }"
echo "   }"
echo ""
echo "‚ùå Current BROKEN result (before fixes):"
echo "   {"
echo "     \"decision\": {"
echo "       \"risk_level\": \"skip\",         # ‚Üê WRONG!"
echo "       \"decision_reasons\": [\"smartfilter_skip\"]"
echo "     },"
echo "     \"search_results\": {"
echo "       \"total_hits\": 0                # ‚Üê Missing AC results"
echo "     }"
echo "   }"
echo ""
echo "üîç Verification steps:"
echo "   1. Check Elasticsearch connectivity:"
echo "      docker exec ai-service curl http://elasticsearch:9200/_cluster/health"
echo ""
echo "   2. Verify patterns exist:"
echo "      curl 'http://95.217.84.234:9200/ai_service_ac_patterns/_search' \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"query\": {\"term\": {\"pattern\": \"–ø–æ—Ä–æ—à–µ–Ω–∫–æ –ø–µ—Ç—Ä–æ\"}}, \"size\": 1}'"
echo ""
echo "   3. Check processing time (should be < 5 seconds):"
echo "      curl -w '\\nTime: %{time_total}s\\n' -X POST http://95.217.84.234:8002/process \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"text\": \"–ü–µ—Ç—Ä–æ –ü–æ—Ä–æ—à–µ–Ω–∫–æ\"}' | jq '.processing_time'"
echo ""
echo "üöÄ BUSINESS IMPACT AFTER ALL FIXES:"
echo "   ‚úÖ SmartFilter timeout fixed ‚Üí no more 10+ second delays"
echo "   ‚úÖ AC search works ‚Üí finds sanctions matches"
echo "   ‚úÖ Decision engine uses search results ‚Üí proper risk scoring"
echo "   ‚úÖ Case sensitivity fixed ‚Üí matches work reliably"
echo "   ‚úÖ Docker network fixed ‚Üí services can communicate"
echo ""
echo "üî¥ CRITICAL FIXES APPLIED:"
echo "   1. SmartFilter timeout: 5s ‚Üí 30s"
echo "   2. Decision engine: Added search=inp.search"
echo "   3. Search integration: Convert candidates to ACResult objects"
echo "   4. ES adapters: Use lowercase for term queries"
echo "   5. Docker compose: Added elasticsearch dependency"
echo ""
